Sharing S3 files across Account :
---------------------------------

Story Description - 
  Whenever new file is created in source bucket it should automatically send to destination AWS account S3 bucket.
  
Design -

Sharing S3 Files Across Account in S3 :
---------------------------------------

brm role name - filetransfer_siebel_to_brm
testforvoid1
brm aws account number - 008795996168
---------------------------------------

Reference Link - https://smartshift.com/s3-data-copy-lambda-function/

Steps :

Source Account -
- IAM role SourceRole with policy to allow SharingRole access
- Source bucket Sourcebucket and policy to allow destionation account SharingRole access
- Lambda function with SourceRole

Destination Account - 
- IAM role type across account - SharingRole
- S3 bucket and policy to allow SharingRole

In destination S3 if not able to view the file disable ACL in S3 bucket

-------------------------------------------------
Source Account -
- IAM Role
	Attach Policy
		AmazonS3FullAccess
		s3-file-transfer-brm
			{
				"Version": "2012-10-17",
				"Statement": [
					{
						"Effect": "Allow",
						"Action": [
							"s3:ListBucket",
							"s3:GetObject"
						],
						"Resource": [
							"arn:aws:s3:::voip-update-output-prod",
							"arn:aws:s3:::voip-update-output-prod/*"
						]
					},
					{
						"Effect": "Allow",
						"Action": [
							"s3:ListBucket",
							"s3:PutObject",
							"s3:PutObjectAcl"
						],
						"Resource": [
							"arn:aws:s3:::voip1",
							"arn:aws:s3:::voip1/*"
						]
					}
				]
			}
		External-Role-Access
			{
				"Version": "2012-10-17",
				"Statement": [
					{
						"Effect": "Allow",
						"Action": "sts:AssumeRole",
						"Resource": "arn:aws:iam::463340842590:role/SharingRole"
					}
				]
			}
		lambda-logs
			{
				"Version": "2012-10-17",
				"Statement": [
					{
						"Effect": "Allow",
						"Action": [
							"logs:CreateLogGroup",
							"logs:CreateLogStream",
							"logs:PutLogEvents"
						],
						"Resource": "*"
					}
				]
			}
			
- S3 bucket - voip-update-output
	Edit policy to allow another account role access 
		{
			"Version": "2008-10-17",
			"Id": "Policy1398367354624",
			"Statement": [
				{
					"Sid": "CrossAccount",
					"Effect": "Allow",
					"Principal": {
						"AWS": "arn:aws:iam::463340842590:role/SharingRole"
					},
					"Action": "s3:*",
					"Resource": "arn:aws:s3:::voip-update-output/*"
				}
			]
		}
	
- Lambda function give the function name same as destionation s3 bucket
	import boto3
	import botocore.exceptions
	import datetime
	import smtplib
	import logging
	import os
	from os import path
	import json
	import uuid
	from urllib.parse import unquote_plus
	import csv

	def lambda_handler(event, context):
		s3 = boto3.resource('s3')
		s3_client = boto3.client('s3')
		# for record in event['Records']:
		#     bucket = record['s3']['bucket']['name']
		#     key = record['s3']['object']['key']
		#     #response = s3.head_object(Bucket=bucket, Key=key)
		#     print("Check record::",record)
		key = '05_01_2022_07_36_23-9014502569.csv'
		bucket = 'voip-update-output'
		#tmpkey = key.replace('/','')
		#download_path = '/tmp/{}{}'.format(uuid.uuid4(), tmpkey)
		print("PWD::",os.getcwd())
		print("CHDIR::",os.chdir('/tmp/'))
		print("PWD::",os.getcwd())
		print("List files ::",os.listdir())
		bucket_obj = s3.Bucket(bucket)
		bucket_obj.download_file(key,key)
		print("List files ::",os.listdir())
		with open(key) as file:
			#print("File::", file.decode('utf-8'))
			csv_reader = csv.reader(file, delimiter=';')
			for row in csv_reader:
				print("CSV Read File :: ",row)
		#s3.Bucket(self.s3_bucket_name).upload_file(self.output_file, self.output_file_name, ExtraArgs={'ServerSideEncryption': 'AES256'})
		s3_client.upload_file(key,'voip1','xyz.csv', ExtraArgs={'ServerSideEncryption': 'AES256'})
		
		return {
			'statusCode': 200,
			'body': json.dumps(csv_reader)
		}

------------------------
Destination Account - 

- IAM Role
	Type sharing across account - SharingRole
	Attach policy
		AmazonS3FullAccess
		AmazonS3ObjectLambdaExecutionRolePolicy
		iamrole-access-bucket
			{
				"Version": "2012-10-17",
				"Statement": [
					{
						"Effect": "Allow",
						"Action": [
							"s3:GetObject",
							"s3:ListBucket",
							"s3:PutObject",
							"s3:PutObjectAcl"
						],
						"Resource": [
							"arn:aws:s3:::voip/*",
							"arn:aws:s3:::voip"
						]
					}
				]
			}
			
- S3 bucket
	voip1 policy to allow source Account access 
		{
			"Version": "2008-10-17",
			"Id": "MyPolicy",
			"Statement": [
				{
					"Sid": "AllowBucketList",
					"Effect": "Allow",
					"Principal": {
						"AWS": "arn:aws:iam::405355513517:root"
					},
					"Action": "s3:ListBucket",
					"Resource": "arn:aws:s3:::voip1"
				},
				{
					"Sid": "AlowUploadDownload",
					"Effect": "Allow",
					"Principal": {
						"AWS": "arn:aws:iam::405355513517:root"
					},
					"Action": [
						"s3:GetObject",
						"s3:PutObject"
					],
					"Resource": [
						"arn:aws:s3:::voip1",
						"arn:aws:s3:::voip1/*"
					]
				}
			]
		}
		
  
